{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name for the resouce in template format, eg bm-demo-{resourceType}-Test-ne"
      }
    },
    "networkSettings": {
      "type": "object"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "contactEmail": {
      "type": "string",
      "defaultValue": "damian.flynn@innofactor.com"
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Prod",
        "Test",
        "Dev",
        "POC"
      ],
      "defaultValue": "Dev",
      "metadata": {
        "description": "Type of environment"
      }
    }
  },
  "variables": {
    "vnetName": "[replace(parameters('name'),'{resourceType}','vnet')]"
  },
  "resources": [
    
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('location')]",
      "scale": null,
      "tags": {
        "Contact": "[parameters('contactEmail')]",
        "Project": "[parameters('name')]",
        "Environment": "[parameters('environment')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('networkSettings').addressSpace]"
          ]
        },
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      },
      "dependsOn": []
    },

    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('vnetName'),'/', parameters('networkSettings').subnets[copyIndex()].name)]",
      "apiVersion": "2018-10-01",
      "scale": null,
      "location": "[parameters('location')]",
      "properties": {
        "addressPrefix": "[parameters('networkSettings').subnets[copyIndex()].addressPrefix]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "copy": {
        "name": "iterator",
        "count": "[length(parameters('networkSettings').subnets)]"
      }
    }
  ],
  "outputs": {
    "resourceID": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
    },
    "resourceName": {
      "type": "string",
      "value": "[variables('vnetName')]"
    }
  }
}