{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name for the resouce in template format, eg bm-demo-{resourceType}-Test-ne"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "contactEmail": {
      "type": "string",
      "defaultValue": "damian.flynn@innofactor.com"
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Prod",
        "Test",
        "Dev",
        "POC"
      ],
      "defaultValue": "Dev",
      "metadata": {
        "description": "Type of environment"
      }
    }
  },
  "variables": {
    "storageName": "[replace(parameters('name'),'{resourcetype}','lrs')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "apiVersion": "2018-07-01",
      "kind": "Storage",
      "scale": null,
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "tags": {
        "Contact": "[parameters('contactEmail')]",
        "Project": "[parameters('name')]",
        "Environment": "[parameters('environment')]"
      },
      "dependsOn": []
    }
  ],
  "outputs": {
    "storageAccountInfo": {
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]",
      "type": "object"
    },
    "resourceID": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageName'))]"
    },
    "storageName": {
      "type": "string",
      "value": "[variables('storageName')]"
    },
    "storageAccountConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(variables('storageName'), '2018-02-01').keys[0].value)]"
    },
    "blobStorageAccountConnectionString": {
      "type": "string",
      "value": "[concat('BlobEndpoint=https://',variables('storageName'),'.blob.core.windows.net/;TableEndpoint=https://',variables('storageName'),'.table.core.windows.net/')]"
    },
    "queueStorageAccountConnectionString": {
      "type": "string",
      "value": "[concat('QueueEndpoint=https://',variables('storageName'),'.queue.core.windows.net/;FileEndpoint=https://',variables('storageName'),'.file.core.windows.net/')]"
    },
    "primaryStorageAccountKey": {
      "type": "string",
      "value": "[listKeys(variables('storageName'), '2018-02-01').keys[0].value]"
    },
    "secondaryStorageAccountKey": {
      "type": "string",
      "value": "[listKeys(variables('storageName'), '2018-02-01').keys[1].value]"
    }

  }
}